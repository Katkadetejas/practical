import pandas as pd
import seaborn as sns
import numpy as np
import matplotlib.pyplot as plt

df = pd.read_csv("Admission_Predict.csv")
df

df.columns
df.info()

df.isnull()
df.isnull().sum()
df.shape
df.head()

from sklearn.preprocessing import Binarizer
bi = Binarizer(threshold=0.75)
df["Chance of Admit "]=bi.fit_transform(df[['Chance of Admit ']])

df
df[df['Chance of Admit '] ==1]


x =df.drop('Chance of Admit ', axis =1)
y = df['Chance of Admit ']
x
y
y = y.astype('int')
y
sns.countplot(x = y)
y.value_counts()
#Cross validation

from sklearn.model_selection import train_test_split

x_train , x_test, y_train, y_test = train_test_split(x,y,random_state=0,test_size=0.25)

x_train.shape

x_test.shape

x_test
#Import class
from sklearn.tree import DecisionTreeClassifier

classifier = DecisionTreeClassifier(random_state=0)
classifier.fit(x_train, y_train)  #Model is formed
#prediction on test data

y_pred = classifier.predict(x_test)
result = pd.DataFrame({'actual':y_test,'predicted':y_pred})

result

from sklearn.metrics import accuracy_score, classification_report
accuracy_score(y_test,y_pred)

print(classification_report(y_test,y_pred))

from sklearn.tree import plot_tree
import matplotlib.pyplot as plt
plt.figure(figsize=(12,12))
plot_tree(classifier, fontsize = 8, filled=True, rounded=True, feature_names=x.columns,class_names=['NA','AD']);





